형변환(Castign)
-자료형을 다른 자료형으로 변환하는 행위

* 작은 자료형과 큰 자료형은 바이트 기준으로 나뉘어짐 *
작은 자료형에서 큰 자료형은 자동형변환(Promotion)이 가능하지만
큰 자료형에서 작은 자료형은 변환이 안되므로 강제형변환(Demotion)을 사용해야한다

* 강제형변환 방식 * : (원하는 자료형) 데이터or 변수

데이터의 입력
-키보드를 통해 다양한 데이터를 자유롭게 입력하는 방식
-키보드 입력에 의한 데이터를 문자열로 얻기 위해서는 'java.util' 패키지의 Scanner클래스를 사용해야 함

다른 패키지에 있는 클래스를 사용할때는 import를 작성해야함
ex) 
import java.util.Scanner;                       -> Scanner 클래스 호출
Scanner 객체명 = new Scanner(System.in) -> Scanner 객체 선언
int 변수명 = 객체명.nextInt();                 -> 정수 입력받기

byte      nextByte() 	입력받은 값을 byte형으로 반환
short     nextShort()	입력받은 값을 short형으로 반환
int        nextInt()	            입력받은 값을 int형으로 반환
long      nextLong()	입력받은 값을 long형으로 반환
float      nextFloat()	입력받은 값을 float형으로 반환
double   nextDouble()	입력받은 값을 double형으로 반환
String    nextLine()	            입력받은 라인 전체를 문자열 타입으로 반환, enter키로 구분
String    next()	            입력받은 값을 문자열 타입으로 반환         , 띄어쓰기로 구분

System.in이란
사용자로부터 입력을 받기 위한 입력 스트림으로써
다른 입력 방식들도 사용자로부터 입력을 받기 위해서는 사용해야함


10을 입력하고 Enter를 쳤다면 버퍼에 10\이 존재한다. 
이때 nextInt()가 버퍼의 내용을 가져올 때 개행문자를 무시하고 가져오기 때문에 10만 가져오게 된다. 
그러면 버퍼에 \n이 남아있는데 nextLine()은 공백문자, 개행문자를 포함시키기 때문에 \n만 가져오고 프로그램이 종료되는 것이다.
1.nextInt()와 nextLine()사이에 다른 변수명의 nextLine()을 추가해주면 원하는 문자열을 입력받을 수 있다
2.sc.skip("[\r\n]")을 사용한다 -> 커서를 앞으로 보내서 enter침

연산자(Operator)
-데이터를 처리하고 결과를 산출하는 작업

최고연산자연산자	. , ()	            괄호 연산 먼저 계산
증감연산자연산자	++, --	            1씩 증감
산술연산자연산자	+,-,*,/,%		사칙연산,나머지계산
시프트연산자	>>,<<		비트의 이동
비교연산자	>, <, >=,<=,==,!=	두 값의 비교
논리연산자	&&,||,!		논리의 연산
비트연산자	&,|,~,^		비트단위의 논리연산
대입연산자	=, +=,-=,/=,*=,%=	우변의 값을 좌변에 대입
삼항연산자	조건식? A : B	조건식의 결과에 따라 A와 B선택

제어문 ( 조건문 및 반복문 )

조건문 ( if 및 switch )
조건이 적으면 if 많으면 switch를 사용

ex)
switch(비교값) {
  case(조건식) : 조건에 해당될 때 실행될 코드
  break;

  default : 조건값이 없을 때 실행할 코드
  break;
}
 
비교값과 case 조건식이 같아야함
break문 무조건 쓰는걸로 연습하기 ( 쓰지 않을 경우 무한루프에 빠짐 )

for문
특정수행문을 원하는만큼 반복하여 실행하는 제어문

for ( int i = 0; i < 3; i++ )
{
    반복하고 싶은 명령
}
초기식 : 반복을 하기 위한 시작값으로 변수를 하나 초기화 한다.
조건식 : 반복을 하기 위한 종료값으로 비교연산자를 많이 사용한다.
증감식 : 변수의 값을 증감시켜주는 역할을 한다 증감연산자를 많이 사용한다.


while문
반복 횟수가 정해져 있지 않고, 조건식이 true일 경우 계속해서 반복하는 문법이다.
무한루프에 빠질수도 있다

while ( 조건식 ) {
    조건식이 참일때 반복할 명령
}

초기식과 증감식을 따로 지정해줘야함






